name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  REGISTRY: quay.io
  REPOSITORY: rhopl
  IMAGE_NAME: openshift-partner-labs-ai-interface

jobs:
  validate:
    name: Code Quality & Build Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run code quality checks
        run: pnpm run validate

      - name: Build application
        run: pnpm run build

  container-build:
    name: Container Image Build
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
          podman --version

      - name: Build container image
        run: |
          podman build \
            --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }} \
            --file Dockerfile \
            .

  container-publish:
    name: Build & Publish Container Image
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
          podman --version

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_TOKEN }}" | podman login ${{ env.REGISTRY }} --username "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Generate image tags
        id: tags
        run: |
          # Extract branch name and commit SHA
          BRANCH=${GITHUB_REF#refs/heads/}
          SHORT_SHA=${GITHUB_SHA:0:7}
          
          # Generate tags
          REGISTRY_IMAGE="${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          
          TAGS=""
          TAGS="$TAGS $REGISTRY_IMAGE:latest"
          TAGS="$TAGS $REGISTRY_IMAGE:$BRANCH"
          TAGS="$TAGS $REGISTRY_IMAGE:$BRANCH-$SHORT_SHA"
          TAGS="$TAGS $REGISTRY_IMAGE:$SHORT_SHA"
          
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "registry_image=$REGISTRY_IMAGE" >> $GITHUB_OUTPUT

      - name: Build container image
        run: |
          podman build \
            --tag ${{ steps.tags.outputs.registry_image }}:latest \
            --file Dockerfile \
            .

      - name: Tag and push container image
        run: |
          # Tag with all generated tags
          for tag in ${{ steps.tags.outputs.tags }}; do
            if [ "$tag" != "${{ steps.tags.outputs.registry_image }}:latest" ]; then
              podman tag ${{ steps.tags.outputs.registry_image }}:latest $tag
            fi
          done
          
          # Push all tags
          for tag in ${{ steps.tags.outputs.tags }}; do
            echo "Pushing $tag"
            podman push $tag
          done